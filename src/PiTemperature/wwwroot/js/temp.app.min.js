function windowExternal(e){window.external.notify(e)}$(function(){var e=function(){function e(e,n,t,o,a,i,r){this.MinValue=-30,this.MaxValue=70,this.TicksInterval=10,this.HighlightsDiv1=20,this.HighlightsDiv2=40,this.HighlightsDiv3=60,this.Sensor=e,this.Name=n,this.Temp=ko.observable(t),this.MinValue=o,this.MaxValue=a,this.TicksInterval=i,this.ScaleColor=r}return e}(),n=function(){function n(){var e=this;this.connectionState=ko.observable(4),this.hub=$.connection.tempHub,$.connection.hub.stateChanged(function(n){return e.connectionStateChanged(n)}),$.connection.hub.disconnected(function(){return e.disconnected()}),this.hub.client.broadcastTempSensors=this.broadcastTempSensors,this.hub.client.broadcastTemperature=this.broadcastTemperature,this.sensors=ko.observableArray([])}return n.prototype.init=function(){this.hub.server.getTempSensors()},n.prototype.drawGauges=function(){this.sensors().forEach(function(e){var n,t=e.ScaleColor.FirstDivider/100,o=e.ScaleColor.SecondDivider/100,a=e.ScaleColor.ThirdDivider/100,i=Math.abs(e.MinValue)+Math.abs(e.MaxValue),r=i/e.TicksInterval,s=new Array;for(n=0;n<=e.TicksInterval;n++)s.push(Math.round(e.MinValue+n*r).toString());e.Gauge=new Gauge({renderTo:e.Sensor,title:e.Name,minValue:e.MinValue,maxValue:e.MaxValue,majorTicks:s,units:"Â°C",valueFormat:{"int":2,dec:2},glow:!0,highlights:[{from:e.MinValue,to:e.MinValue+t*i,color:e.ScaleColor.FirstColor},{from:e.MinValue+t*i,to:e.MinValue+o*i,color:e.ScaleColor.SecondColor},{from:e.MinValue+o*i,to:e.MinValue+a*i,color:e.ScaleColor.ThirdColor},{from:e.MinValue+a*i,to:e.MinValue+i,color:e.ScaleColor.LastColor}],animation:{delay:10,duration:300,fn:"bounce"}}),e.Gauge.setValue(e.Temp()),e.Gauge.draw()})},n.prototype.connectionStateChanged=function(e){switch(t.connectionState(e.newState),e.newState){case 0:t.sensors().forEach(function(e){e.Gauge.setValue(e.MinValue)});break;case 4:t.sensors().forEach(function(e){e.Gauge.setValue(e.MaxValue)})}},n.prototype.disconnected=function(){setTimeout(function(){$.connection.hub.start(function(){t.init()})},5e3)},n.prototype.broadcastTemperature=function(e){var n=ko.utils.arrayFirst(t.sensors(),function(n){return n.Sensor===e.Sensor});n.Temp(e.Temp),n.Gauge.setValue(e.Temp)},n.prototype.broadcastTempSensors=function(n){var o=$.map(n,function(n){return new e(n.Sensor,n.Name,n.Temp,n.MinValue,n.MaxValue,n.TicksInterval,n.ScaleColor)});t.sensors(o),t.drawGauges()},n}(),t=new n;ko.applyBindings(t),$("#connectionStateContanier").removeClass("hidden"),$.connection.hub.start(function(){t.init()})});