function windowExternal(e){void 0!=window.external.notify&&window.external.notify(e)}$(function(){var e=function(){function e(e,n,t){this.Sensor=e,this.Name=n,this.Temp=ko.observable(t)}return e}(),n=function(){function n(){var e=this;this.connectionState=ko.observable(4),this.hub=$.connection.tempHub,$.connection.hub.stateChanged(function(n){return e.connectionStateChanged(n)}),$.connection.hub.disconnected(function(){return e.disconnected()}),this.hub.client.broadcastTempSensors=this.broadcastTempSensors,this.hub.client.broadcastTemperature=this.broadcastTemperature,this.sensors=ko.observableArray([])}return n.prototype.init=function(){this.hub.server.getTempSensors()},n.prototype.drawGauges=function(){this.sensors().forEach(function(e){e.Gauge=new Gauge({renderTo:e.Sensor,title:e.Name,minValue:-30,maxValue:70,majorTicks:["-30","-20","-10","0","10","20","30","40","50","60","70"],units:"Â°C",valueFormat:{"int":2,dec:2},glow:!0,highlights:[{from:-30,to:-10,color:"SkyBlue"},{from:-10,to:10,color:"Khaki"},{from:10,to:30,color:"PaleGreen"},{from:30,to:70,color:"LightSalmon"}],animation:{delay:10,duration:300,fn:"bounce"}}),e.Gauge.setValue(e.Temp()),e.Gauge.draw()})},n.prototype.connectionStateChanged=function(e){switch(t.connectionState(e.newState),e.newState){case 0:t.sensors().forEach(function(e){e.Gauge.setValue(-30)});break;case 4:t.sensors().forEach(function(e){e.Gauge.setValue(70)})}},n.prototype.disconnected=function(){setTimeout(function(){$.connection.hub.start(function(){t.init()})},5e3)},n.prototype.broadcastTemperature=function(e){var n=ko.utils.arrayFirst(t.sensors(),function(n){return n.Sensor===e.Sensor});n.Temp(e.Temp),n.Gauge.setValue(e.Temp)},n.prototype.broadcastTempSensors=function(n){var o=$.map(n,function(n){return new e(n.Sensor,n.Name,n.Temp)});t.sensors(o),t.drawGauges()},n}(),t=new n;ko.applyBindings(t),$("#connectionStateContanier").removeClass("hidden"),$.connection.hub.start(function(){t.init()})});